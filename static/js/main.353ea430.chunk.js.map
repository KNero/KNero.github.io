{"version":3,"sources":["menu/DesktopMenu.js","page/Who.js","page/ContentsBanner.js","page/PageNumberList.js","page/ContentsList.js","page/Contents.js","App.js","serviceWorker.js","index.js"],"names":["DesktopMenu","className","to","UrlCard","name","url","target","rel","href","LegacyStack","intro","stackCss","Who","alt","src","colCss","React","Component","ContentsBanner","subject","description","date","page","PageNumberList","this","props","path","totalPage","pageNumberList","i","push","key","index","selected","map","row","PageNumber","onClick","window","scrollTo","top","ContentsList","state","list","pageNumber","selectedPage","changePageByQueryString","location","hash","pageParam","split","length","Number","e","loadContentsList","fetch","listPath","then","response","json","responseJson","data","sub","des","extractDateFromPath","setState","addEventListener","removeEventListener","basicPath","pathParts","MARKDOWN_CONVERTER","require","Converter","tables","strikethrough","Contents","contests","listUrl","search","queryMap","parseQuery","text","responseText","contents","makeHtml","style","textAlign","dangerouslySetInnerHTML","__html","queryString","query","pairs","substr","pair","decodeURIComponent","App","exact","render","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.353ea430.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './DesktopMenu.scss';\n\nexport const DesktopMenu = () => (\n    <div className=\"desktop-menu\">\n        <Link to=\"/dev\">개발</Link>\n        <Link to=\"/etc\">끄적끄적</Link>\n        <Link to=\"/who\">Nero is</Link>\n    </div>\n);","import React from 'react';\nimport './Who.scss';\n\nconst UrlCard = ({name, url}) => <a className=\"url-card\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{name}</a>;\n\nconst LegacyStack = ({name, intro, url, stackCss}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-3\"/>\n        <div className=\"col-sm-6\">\n            <a className={stackCss} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                <strong>{name}</strong>\n                <div>{intro}</div>\n            </a>\n        </div>\n        <div className=\"col-sm-3\"/>\n    </div>\n);\n\nexport default class Who extends React.Component {\n    render() {\n        return (\n            <div className=\"who\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <img alt=\"nero\" src=\"/knero-1.png\"/>\n                    </div>\n                    <div className=\"col-sm-6 my-info\">\n                        <div className=\"nickname\">K.Nero</div>\n                        <div>kwon-s-m@daum.net</div>\n                        <div className=\"intro\">\n                            #Java #C# #Backend #FullSt... #React_Native #React #Spring #Android #iOS #app_publishing\n                            #I_love_Network #AWS #SQL_a_little #CTO_Mask_maybe\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <UrlCard name=\"Linked in\" url=\"https://www.linkedin.com/in/seongminKwon\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"github\" url=\"https://github.com/KNero?tab=repositories\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"tistory\" url=\"https://jamcode.tistory.com\" colCss=\"col-sm-3\"/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 legacy-stack-text\">github repository</div>\n                </div>\n                <LegacyStack name=\"OS Study\"\n                             intro=\"책 [64비트 멀티코어 OS 원리와구조] 따라하기\"\n                             url=\"https://github.com/KNero/os-study\"\n                             stackCss=\"legacy-stack-os\"/>\n                <LegacyStack name=\"jwt-security\"\n                             intro=\"JWT 와 Role 을 통한 서비스 접근 제어\"\n                             url=\"https://github.com/KNero/jwt-security\"\n                             stackCss=\"legacy-stack-jwt\"/>\n                <LegacyStack name=\"ExOf\"\n                             intro=\"가벼운 프레임워크. 쉬운 사용 방법을 통한 빠른 서비스 호출\"\n                             url=\"https://knero.github.io/ExOf\"\n                             stackCss=\"legacy-stack-exof\"/>\n                <LegacyStack name=\"SQLite-Helper\"\n                             intro=\"SQLite Multi Thread And Single Connection Pool\"\n                             url=\"https://knero.github.io/SQLite-Helper/\"\n                             stackCss=\"legacy-stack-sqlite\"/>\n                <LegacyStack name=\"poi-relative-cell\"\n                             intro=\"Improved use to POI\"\n                             url=\"https://github.com/KNero/poi-relative-cell\"\n                             stackCss=\"legacy-stack-cell\"/>\n                <LegacyStack name=\"FileQueue\"\n                             intro=\"Serverless file queue\"\n                             url=\"https://github.com/KNero/FileQueue\"\n                             stackCss=\"legacy-stack-queue\"/>\n                <LegacyStack name=\"ETree\"\n                             intro=\"javascript tree component\"\n                             url=\"https://github.com/KNero/ETree\"\n                             stackCss=\"legacy-stack-etree\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './ContentsBanner.scss';\n\nexport const ContentsBanner = ({subject, description, url, date, page}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-2\"/>\n        <div className=\"col-sm-8 contents-banner\">\n            <Link to={\"/contents?path=\" + url + \"&date=\" + date + \"&page=\" + page}>\n                <div className=\"button type2\">\n                    <div className=\"subject\">{subject}</div>\n                    <div className=\"description\">{description}</div>\n                    <div className=\"date\">{date}</div>\n                </div>\n            </Link>\n        </div>\n        <div className=\"col-sm-2\"/>\n    </div>\n);","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport \"./PageNumberList.scss\";\n\nexport default class PageNumberList extends React.Component {\n    render() {\n        const {path, totalPage} = this.props;\n        let pageNumberList = [];\n\n        for (let i = 1; i <= totalPage; ++i) {\n            pageNumberList.push(<PageNumber key={\"page\" + i} path={path} index={i} selected={i === this.props.selected}/>);\n        }\n\n        return (\n            <div className=\"page-number-back\">\n                {pageNumberList.map(row => row)}\n            </div>\n        );\n    }\n}\n\nconst PageNumber = ({path, index, selected}) => (\n    <Link to={path + \"?page=\" + index} onClick={() => window.scrollTo({top: 0})}>\n        <span className={selected ? \"page-number selected\" : \"page-number\"}>{index}</span>\n    </Link>\n);","import React from 'react';\nimport {ContentsBanner} from \"./ContentsBanner\";\nimport PageNumberList from \"./PageNumberList\";\n\nconst PAGE_SIZE = 10;\n\nexport default class ContentsList extends React.Component {\n    state = {list: [], pageNumber: null, totalPage: 1, selectedPage: 1};\n\n    componentDidMount() {\n        this.changePageByQueryString();\n\n        window.addEventListener(\"hashchange\", this.changePageByQueryString, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"hashchange\", this.changePageByQueryString, false);\n    }\n\n    changePageByQueryString = () => {\n        let page = 1;\n\n        if (window.location.hash) {\n            const pageParam = window.location.hash.split(\"?page=\");\n            if (pageParam.length === 2) {\n                try {\n                    page = Number(pageParam[1]);\n                } catch (e) {\n                    page = 1;\n                }\n            }\n        }\n\n        this.loadContentsList(page);\n    };\n\n    loadContentsList = (page) => {\n        fetch(this.props.listPath)\n            .then(response => response.json())\n            .then(responseJson => {\n                if (responseJson.length > 0) {\n                    let list = [];\n\n                    for (let i = PAGE_SIZE * (page - 1); i < PAGE_SIZE * page; ++i) {\n                        const data = responseJson[i];\n                        if (data) {\n                            list.push(<ContentsBanner key={\"contents\" + i}\n                                                      subject={data.sub}\n                                                      description={data.des}\n                                                      url={data.path}\n                                                      date={ContentsList.extractDateFromPath(data.path)}\n                                                      page={page}/>);\n                        } else {\n                            break;\n                        }\n\n                    }\n\n                    this.setState({list: list, totalPage: (responseJson.length / PAGE_SIZE) + 1, selectedPage: page});\n                }\n            });\n    };\n\n    static extractDateFromPath(path) {\n        let pathParts = path.split(\"/\");\n        return pathParts[3] + '.' + pathParts[4] + \".\" + pathParts[5];\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.list.map(row => row)}\n                <PageNumberList path={this.props.basicPath} totalPage={this.state.totalPage} selected={this.state.selectedPage}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Contents.scss';\n\nconst MARKDOWN = require('showdown');\nconst MARKDOWN_CONVERTER = new MARKDOWN.Converter({\n    tables:true,\n    strikethrough:true\n});\n\nexport default class Contents extends React.Component {\n    state = {contests: \"\", data: \"\", listUrl: \"\"};\n\n    componentDidMount() {\n        if (this.props.location.search) {\n            let queryMap = Contents.parseQuery(this.props.location.search);\n            if (queryMap.path) {\n                fetch(queryMap.path)\n                    .then(response => response.text())\n                    .then(responseText => this.setState({\n                        contents: MARKDOWN_CONVERTER.makeHtml(responseText),\n                        date: queryMap.date,\n                        listUrl: \"/\" + queryMap.path.split(\"/\")[2] + \"?page=\" + queryMap.page\n                    }));\n            }\n        }\n    }\n\n    static parseQuery(queryString) {\n        let query = {};\n        let pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n        for (let i = 0; i < pairs.length; i++) {\n            let pair = pairs[i].split('=');\n            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n        }\n        return query;\n    }\n\n    render() {\n        return (\n            <div className=\"contents\">\n                <div className=\"col-sm-1\"/>\n                <div className=\"col-sm-10\">\n                    <Link to={this.state.listUrl}>목록으로</Link>\n                    <div className=\"date\">작성일 : {this.state.date}</div>\n                    <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={{__html: this.state.contents}}/>\n                    <Link to={this.state.listUrl}>목록으로</Link>\n                </div>\n                <div className=\"col-sm-1\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport {DesktopMenu} from './menu/DesktopMenu';\nimport Who from './page/Who';\nimport ContentsList from './page/ContentsList';\nimport Contents from \"./page/Contents\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <DesktopMenu/>\n                <div className=\"container\">\n                    <Route exact path=\"/\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\n                    <Route path=\"/dev\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\n                    <Route path=\"/etc\" render={() => <ContentsList basicPath=\"/etc\" listPath=\"/contents/etc-list.json\"/>}/>\n                    <Route path=\"/who\" component={Who}/>\n                    <Route path=\"/contents\" component={Contents}/>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}