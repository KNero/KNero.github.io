{"version":3,"sources":["menu/DesktopMenu.js","page/Who.js","page/Contents.js","page/ContentsBanner.js","page/PageNumberList.js","page/ContentsList.js","App.js","serviceWorker.js","index.js"],"names":["DesktopMenu","className","onClick","onClickDev","id","closeSubMenu","to","display","document","getElementById","style","UrlCard","name","url","target","rel","href","LegacyStack","intro","stackCss","Who","alt","src","colCss","React","Component","MARKDOWN_CONVERTER","require","Converter","tables","strikethrough","Contents","state","contests","data","listUrl","this","props","location","search","queryMap","parseQuery","path","fetch","then","response","text","responseText","setState","contents","makeHtml","date","extractDateFromPath","split","textAlign","dangerouslySetInnerHTML","__html","queryString","query","pairs","substr","i","length","pair","decodeURIComponent","pathParts","arrayLength","ContentsBanner","subject","description","page","PageNumberList","totalPage","pageNumberList","push","key","index","selected","map","row","PageNumber","onClickNumber","window","hash","indexOf","pageStart","pageEnd","charAt","substring","ContentsList","list","pageNumber","selectedPage","queryStringMap","changePageByQueryString","qIndex","loadContentsList","Number","listPath","json","responseJson","originList","filterContents","contentsBanner","createContentsBanner","add","allContents","result","forEach","filterCategory","c","sub","startsWith","addEventListener","removeEventListener","basicPath","des","App","exact","render","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.59da68cd.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './DesktopMenu.scss';\n\nexport const DesktopMenu = () => (\n    <div className=\"desktop-menu\">\n        <div>\n            <a onClick={onClickDev}>개발</a>\n            <div id=\"dev-menu\" className=\"sub-menu\" onClick={closeSubMenu}>\n                <div>\n                    <Link to=\"/dev\">전체</Link>\n                </div>\n                <div>\n                    <Link to=\"/dev?c=os\">OS Study</Link>\n                </div>\n                <div>\n                    <Link to=\"/dev?c=cs\">C#</Link>\n                </div>\n            </div>\n        </div>\n        <Link to=\"/etc\" onClick={closeSubMenu}>끄적끄적</Link>\n        <Link to=\"/who\" onClick={closeSubMenu}>Nero is</Link>\n    </div>\n);\n\nconst onClickDev = () => {\n    const display = document.getElementById(\"dev-menu\").style.display;\n    if (!display || display === \"none\") {\n        document.getElementById(\"dev-menu\").style.display = \"block\";\n    } else {\n        document.getElementById(\"dev-menu\").style.display = \"none\";\n    }\n};\n\nconst closeSubMenu = () => {\n    document.getElementById(\"dev-menu\").style.display = \"none\";\n};","import React from 'react';\nimport './Who.scss';\n\nconst UrlCard = ({name, url}) => <a className=\"url-card\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{name}</a>;\n\nconst LegacyStack = ({name, intro, url, stackCss}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-3\"/>\n        <div className=\"col-sm-6\">\n            <a className={stackCss} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                <strong>{name}</strong>\n                <div>{intro}</div>\n            </a>\n        </div>\n        <div className=\"col-sm-3\"/>\n    </div>\n);\n\nexport default class Who extends React.Component {\n    render() {\n        return (\n            <div className=\"who\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <img alt=\"nero\" src=\"/knero-1.png\"/>\n                    </div>\n                    <div className=\"col-sm-6 my-info\">\n                        <div className=\"nickname\">K.Nero</div>\n                        <div>kwon-s-m@daum.net</div>\n                        <div className=\"intro\">\n                            #Java #C# #Backend #FullSt... #React_Native #React #Spring #Android #iOS #app_publishing\n                            #I_love_Network #AWS #SQL_a_little #CTO_Mask_maybe\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <UrlCard name=\"Linked in\" url=\"https://www.linkedin.com/in/seongminKwon\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"github\" url=\"https://github.com/KNero?tab=repositories\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"tistory\" url=\"https://jamcode.tistory.com\" colCss=\"col-sm-3\"/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 legacy-stack-text\">github repository</div>\n                </div>\n                <LegacyStack name=\"OS Study\"\n                             intro=\"책 [64비트 멀티코어 OS 원리와구조] 따라하기\"\n                             url=\"https://github.com/KNero/os-study\"\n                             stackCss=\"legacy-stack-os\"/>\n                <LegacyStack name=\"jwt-security\"\n                             intro=\"JWT 와 Role 을 통한 서비스 접근 제어\"\n                             url=\"https://github.com/KNero/jwt-security\"\n                             stackCss=\"legacy-stack-jwt\"/>\n                <LegacyStack name=\"ExOf\"\n                             intro=\"가벼운 프레임워크. 쉬운 사용 방법을 통한 빠른 서비스 호출\"\n                             url=\"https://knero.github.io/ExOf\"\n                             stackCss=\"legacy-stack-exof\"/>\n                <LegacyStack name=\"SQLite-Helper\"\n                             intro=\"SQLite Multi Thread And Single Connection Pool\"\n                             url=\"https://knero.github.io/SQLite-Helper/\"\n                             stackCss=\"legacy-stack-sqlite\"/>\n                <LegacyStack name=\"poi-relative-cell\"\n                             intro=\"Improved use to POI\"\n                             url=\"https://github.com/KNero/poi-relative-cell\"\n                             stackCss=\"legacy-stack-cell\"/>\n                <LegacyStack name=\"FileQueue\"\n                             intro=\"Serverless file queue\"\n                             url=\"https://github.com/KNero/FileQueue\"\n                             stackCss=\"legacy-stack-queue\"/>\n                <LegacyStack name=\"ETree\"\n                             intro=\"javascript tree component\"\n                             url=\"https://github.com/KNero/ETree\"\n                             stackCss=\"legacy-stack-etree\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Contents.scss';\n\nconst MARKDOWN = require('showdown');\nconst MARKDOWN_CONVERTER = new MARKDOWN.Converter({\n    tables:true,\n    strikethrough:true\n});\n\nexport default class Contents extends React.Component {\n    state = {contests: \"\", data: \"\", listUrl: \"\"};\n\n    componentDidMount() {\n        if (this.props.location.search) {\n            let queryMap = Contents.parseQuery(this.props.location.search);\n\n            if (queryMap.path) {\n                fetch(queryMap.path)\n                    .then(response => response.text())\n                    .then(responseText => this.setState({\n                        contents: MARKDOWN_CONVERTER.makeHtml(responseText),\n                        date: Contents.extractDateFromPath(queryMap.path),\n                        listUrl: \"/\" + queryMap.path.split(\"/\")[2] + \"?\" + this.props.location.search.split(queryMap.path + \"&\")[1]\n                    }));\n            }\n        }\n    }\n\n    static parseQuery(queryString) {\n        let query = {};\n        let pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n        for (let i = 0; i < pairs.length; i++) {\n            let pair = pairs[i].split('=');\n            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n        }\n        return query;\n    }\n\n    static extractDateFromPath(path) {\n        let pathParts = path.split(\"/\");\n        const arrayLength = pathParts.length;\n\n        return pathParts[arrayLength - 4] + \".\" + pathParts[arrayLength - 3] + \".\" + pathParts[arrayLength - 2];\n    }\n\n    render() {\n        return (\n            <div className=\"contents\">\n                <div className=\"col-sm-1\"/>\n                <div className=\"col-sm-10\">\n                    <Link to={this.state.listUrl}>목록으로</Link>\n                    <div className=\"date\">작성일 : {this.state.date}</div>\n                    <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={{__html: this.state.contents}}/>\n                    <Link to={this.state.listUrl}>목록으로</Link>\n                </div>\n                <div className=\"col-sm-1\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './ContentsBanner.scss';\nimport Contents from \"./Contents\";\n\nexport const ContentsBanner = ({subject, description, url, page, query}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-2\"/>\n        <div className=\"col-sm-8 contents-banner\">\n            <Link to={\"/contents?path=\" + url + (query !== \"\" ? \"&\" + query : \"&page=\" + page)}>\n                <div className=\"button type2\">\n                    <div className=\"subject\">{subject}</div>\n                    <div className=\"description\">{description}</div>\n                    <div className=\"date\">{Contents.extractDateFromPath(url)}</div>\n                </div>\n            </Link>\n        </div>\n        <div className=\"col-sm-2\"/>\n    </div>\n);","import React from 'react';\nimport \"./PageNumberList.scss\";\n\nexport default class PageNumberList extends React.Component {\n    render() {\n        const {path, totalPage} = this.props;\n        let pageNumberList = [];\n\n        for (let i = 1; i <= totalPage; ++i) {\n            pageNumberList.push(<PageNumber key={\"page\" + i} path={path} index={i} selected={i === this.props.selected}/>);\n        }\n\n        return (\n            <div className=\"page-number-back\">\n                {pageNumberList.map(row => row)}\n            </div>\n        );\n    }\n}\n\nconst PageNumber = ({path, index, selected}) => (\n    <a onClick={() => onClickNumber(index)}>\n        <span className={selected ? \"page-number selected\" : \"page-number\"}>{index}</span>\n    </a>\n);\n\nconst onClickNumber = (page) => {\n    if (window.location.hash.indexOf(\"?\") > -1) {\n        const hash = window.location.hash;\n        const pageStart = hash.indexOf(\"page=\");\n        let pageEnd = hash.length;\n\n        if (pageStart > -1) {\n            for (let i = pageStart; i < hash.length; i++) {\n                if (hash.charAt(i) === \"&\") {\n                    pageEnd = i;\n                    break;\n                }\n            }\n\n            window.location.hash = hash.split(\"page=\")[0] + \"page=\" + page + hash.substring(pageEnd);\n        } else {\n            window.location.hash += \"&page=\" + page;\n        }\n    } else {\n        window.location.hash = \"?page=\" + page;\n    }\n};","import React from 'react';\nimport {ContentsBanner} from \"./ContentsBanner\";\nimport PageNumberList from \"./PageNumberList\";\nimport Contents from \"./Contents\";\n\nconst PAGE_SIZE = 10;\n\nexport default class ContentsList extends React.Component {\n    state = {list: [], pageNumber: null, totalPage: 1, selectedPage: 1};\n    queryStringMap = {};\n\n    componentDidMount() {\n        this.changePageByQueryString();\n\n        window.addEventListener(\"hashchange\", this.changePageByQueryString, false);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"hashchange\", this.changePageByQueryString, false);\n    }\n\n    changePageByQueryString = () => {\n        const qIndex = window.location.hash.indexOf(\"?\");\n        if (qIndex > -1) {\n            this.queryStringMap = Contents.parseQuery(window.location.hash.substring(qIndex));\n        } else {\n            this.queryStringMap = {};\n        }\n\n        this.loadContentsList();\n    };\n\n    loadContentsList = () => {\n        let page = Number(this.queryStringMap.page);\n        if (!page || page < 1) {\n            page = 1;\n        }\n\n        fetch(this.props.listPath)\n            .then(response => response.json())\n            .then(responseJson => {\n                if (responseJson.length > 0) {\n                    let originList = this.filterContents((responseJson));\n\n                    let list = [];\n\n                    for (let i = PAGE_SIZE * (page - 1); i < PAGE_SIZE * page; ++i) {\n                        const contentsBanner = ContentsList.createContentsBanner(originList, i, page);\n\n                        if (contentsBanner) {\n                            list.push(contentsBanner);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    const add = originList.length % PAGE_SIZE > 0 ? 1 : 0;\n                    this.setState({list: list, totalPage: (originList.length / PAGE_SIZE) + add, selectedPage: page});\n                }\n            });\n    };\n\n    filterContents = (allContents) => {\n        const result = [];\n\n        allContents.forEach(row => {\n            let isOk = this.filterCategory(row);\n\n            if (isOk) {\n                result.push(row);\n            }\n        });\n\n        return result;\n    };\n\n    filterCategory = (contents) => {\n        switch (this.queryStringMap.c) {\n            case \"os\":\n                return contents.sub.startsWith(\"[OS Study]\");\n            case \"cs\":\n                return contents.sub.startsWith(\"[C#]\");\n        }\n\n        return true;\n    };\n\n    static createContentsBanner(list, i, page) {\n        const data = list[i];\n\n        if (data) {\n            let query = \"\";\n            if (window.location.hash.indexOf(\"?\") > -1) {\n                const hash = window.location.hash;\n                query = hash.split(\"?\")[1];\n            }\n\n            return <ContentsBanner key={\"contents\" + i}\n                                   subject={(list.length - i) + \". \" + data.sub}\n                                   description={data.des}\n                                   url={data.path}\n                                   page={page}\n                                   query={query}/>;\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.list.map(row => row)}\n                <PageNumberList path={this.props.basicPath} totalPage={this.state.totalPage} selected={this.state.selectedPage}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport {DesktopMenu} from './menu/DesktopMenu';\nimport Who from './page/Who';\nimport ContentsList from './page/ContentsList';\nimport Contents from \"./page/Contents\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <DesktopMenu/>\n                <div className=\"container\">\n                    <Route exact path=\"/\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\n                    <Route path=\"/dev\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\n                    <Route path=\"/etc\" render={() => <ContentsList basicPath=\"/etc\" listPath=\"/contents/etc-list.json\"/>}/>\n                    <Route path=\"/who\" component={Who}/>\n                    <Route path=\"/contents\" component={Contents}/>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}