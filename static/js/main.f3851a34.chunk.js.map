{"version":3,"sources":["menu/DesktopMenu.js","page/Who.js","page/Contents.js","page/ContentsBanner.js","page/PageNumberList.js","page/ContentsList.js","App.js","serviceWorker.js","index.js"],"names":["DesktopMenu","state","menu","fetch","this","props","menuPath","then","response","json","responseJson","menuList","forEach","push","key","path","to","onClick","closeNav","name","setState","className","openNav","id","React","Component","document","getElementById","style","width","UrlCard","url","target","rel","href","LegacyStack","intro","stackCss","Who","alt","src","colCss","MARKDOWN","require","MARKDOWN_HIGHLIGHT","MARKDOWN_CONVERTER","Converter","tables","strikethrough","extensions","pre","Contents","contests","data","listUrl","location","search","queryMap","parseQuery","text","responseText","contents","makeHtml","date","extractDateFromPath","split","textAlign","dangerouslySetInnerHTML","__html","queryString","query","pairs","substr","i","length","pair","decodeURIComponent","pathParts","arrayLength","ContentsBanner","subject","description","page","PageNumberList","totalPage","pageNumberList","index","selected","map","row","PageNumber","onClickNumber","window","hash","indexOf","pageStart","pageEnd","charAt","substring","ContentsList","list","pageNumber","selectedPage","queryStringMap","changePageByQueryString","qIndex","loadContentsList","Number","listPath","originList","filterContents","contentsBanner","createContentsBanner","add","allContents","result","isOk","f","sub","startsWith","addEventListener","removeEventListener","basicPath","des","App","exact","render","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f3851a34.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\nimport './DesktopMenu.scss';\r\n\r\nexport default class DesktopMenu extends React.Component {\r\n    state = {menu: []};\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.menuPath)\r\n            .then(response => response.json())\r\n            .then(responseJson => {\r\n                let menuList = [];\r\n                responseJson.forEach(menu => menuList.push(<Link key={menu.path} to={menu.path} onClick={closeNav}>{menu.name}</Link>));\r\n\r\n                this.setState({menu: menuList});\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"desktop-menu\">\r\n                <div className=\"show-nav\" onClick={openNav}>&#9776;</div>\r\n                <div id=\"mySidenav\" className=\"sidenav\">\r\n                    <a className=\"closebtn\" onClick={closeNav}>&times;</a>\r\n                    {this.state.menu}\r\n                    <Link to=\"/who\" onClick={closeNav}>profile</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDesktopMenu.propTypes = {\r\n    menuPath: PropTypes.string,\r\n};\r\n\r\nfunction openNav() {\r\n    document.getElementById(\"mySidenav\").style.width = \"180px\";\r\n}\r\n\r\nfunction closeNav() {\r\n    document.getElementById(\"mySidenav\").style.width = \"0\";\r\n}","import React from 'react';\r\nimport './Who.scss';\r\n\r\nconst UrlCard = ({name, url}) => <a className=\"url-card\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{name}</a>;\r\n\r\nconst LegacyStack = ({name, intro, url, stackCss}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col-sm-3\"/>\r\n        <div className=\"col-sm-6\">\r\n            <a className={stackCss} target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\r\n                <strong>{name}</strong>\r\n                <div>{intro}</div>\r\n            </a>\r\n        </div>\r\n        <div className=\"col-sm-3\"/>\r\n    </div>\r\n);\r\n\r\nexport default class Who extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"who\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <img alt=\"nero\" src=\"/knero-1.png\"/>\r\n                    </div>\r\n                    <div className=\"col-sm-6 my-info\">\r\n                        <div className=\"nickname\">K.Nero</div>\r\n                        <div>kwon-s-m@daum.net</div>\r\n                        <div className=\"intro\">\r\n                            #Java #C# #Backend #FullSt... #React_Native #React #Spring #Android #iOS #app_publishing\r\n                            #I_love_Network #AWS #SQL_a_little #CTO_Mask_maybe\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <UrlCard name=\"Linked in\" url=\"https://www.linkedin.com/in/seongminKwon\" colCss=\"col-sm-3\"/>\r\n                        <UrlCard name=\"github\" url=\"https://github.com/KNero?tab=repositories\" colCss=\"col-sm-3\"/>\r\n                        <UrlCard name=\"tistory\" url=\"https://jamcode.tistory.com\" colCss=\"col-sm-3\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 legacy-stack-text\">github repository</div>\r\n                </div>\r\n                <LegacyStack name=\"OS Study\"\r\n                             intro=\"책 [64비트 멀티코어 OS 원리와구조] 따라하기\"\r\n                             url=\"https://github.com/KNero/os-study\"\r\n                             stackCss=\"legacy-stack-os\"/>\r\n                <LegacyStack name=\"jwt-security\"\r\n                             intro=\"JWT 와 Role 을 통한 서비스 접근 제어\"\r\n                             url=\"https://github.com/KNero/jwt-security\"\r\n                             stackCss=\"legacy-stack-jwt\"/>\r\n                <LegacyStack name=\"ExOf\"\r\n                             intro=\"가벼운 프레임워크. 쉬운 사용 방법을 통한 빠른 서비스 호출\"\r\n                             url=\"https://knero.github.io/ExOf\"\r\n                             stackCss=\"legacy-stack-exof\"/>\r\n                <LegacyStack name=\"SQLite-Helper\"\r\n                             intro=\"SQLite Multi Thread And Single Connection Pool\"\r\n                             url=\"https://knero.github.io/SQLite-Helper/\"\r\n                             stackCss=\"legacy-stack-sqlite\"/>\r\n                <LegacyStack name=\"poi-relative-cell\"\r\n                             intro=\"Improved use to POI\"\r\n                             url=\"https://github.com/KNero/poi-relative-cell\"\r\n                             stackCss=\"legacy-stack-cell\"/>\r\n                <LegacyStack name=\"FileQueue\"\r\n                             intro=\"Serverless file queue\"\r\n                             url=\"https://github.com/KNero/FileQueue\"\r\n                             stackCss=\"legacy-stack-queue\"/>\r\n                <LegacyStack name=\"ETree\"\r\n                             intro=\"javascript tree component\"\r\n                             url=\"https://github.com/KNero/ETree\"\r\n                             stackCss=\"legacy-stack-etree\"/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './Contents.scss';\r\n\r\nconst MARKDOWN = require('showdown');\r\nconst MARKDOWN_HIGHLIGHT = require(\"showdown-highlight\");\r\nconst MARKDOWN_CONVERTER = new MARKDOWN.Converter({\r\n    tables:true,\r\n    strikethrough:true,\r\n    extensions: [MARKDOWN_HIGHLIGHT({\r\n        // Whether to add the classes to the <pre> tag\r\n        pre: true\r\n    })]\r\n});\r\n\r\nexport default class Contents extends React.Component {\r\n    state = {contests: \"\", data: \"\", listUrl: \"\"};\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            let queryMap = Contents.parseQuery(this.props.location.search);\r\n\r\n            if (queryMap.path) {\r\n                fetch(queryMap.path)\r\n                    .then(response => response.text())\r\n                    .then(responseText => this.setState({\r\n                        contents: MARKDOWN_CONVERTER.makeHtml(responseText),\r\n                        date: Contents.extractDateFromPath(queryMap.path),\r\n                        listUrl: \"/\" + queryMap.path.split(\"/\")[2] + \"?\" + this.props.location.search.split(queryMap.path + \"&\")[1]\r\n                    }));\r\n            }\r\n        }\r\n    }\r\n\r\n    static parseQuery(queryString) {\r\n        let query = {};\r\n        let pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\r\n        for (let i = 0; i < pairs.length; i++) {\r\n            let pair = pairs[i].split('=');\r\n            query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\r\n        }\r\n        return query;\r\n    }\r\n\r\n    static extractDateFromPath(path) {\r\n        let pathParts = path.split(\"/\");\r\n        const arrayLength = pathParts.length;\r\n\r\n        return pathParts[arrayLength - 4] + \".\" + pathParts[arrayLength - 3] + \".\" + pathParts[arrayLength - 2];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"contents\">\r\n                <div className=\"col-sm-1\"/>\r\n                <div className=\"col-sm-10\">\r\n                    <Link to={this.state.listUrl}>목록으로</Link>\r\n                    <div className=\"date\">작성일 : {this.state.date}</div>\r\n                    <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={{__html: this.state.contents}}/>\r\n                    <Link to={this.state.listUrl}>목록으로</Link>\r\n                </div>\r\n                <div className=\"col-sm-1\"/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './ContentsBanner.scss';\r\nimport Contents from \"./Contents\";\r\n\r\nexport const ContentsBanner = ({subject, description, url, page, query}) => (\r\n    <div className=\"row\">\r\n        <div className=\"col-sm-2\"/>\r\n        <div className=\"col-sm-8 contents-banner\">\r\n            <Link to={\"/contents?path=\" + url + (query !== \"\" ? \"&\" + query : \"&page=\" + page)}>\r\n                <div className=\"button type2\">\r\n                    <div className=\"subject\">{subject}</div>\r\n                    <div className=\"description\">{description}</div>\r\n                    <div className=\"date\">{Contents.extractDateFromPath(url)}</div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n        <div className=\"col-sm-2\"/>\r\n    </div>\r\n);","import React from 'react';\r\nimport \"./PageNumberList.scss\";\r\n\r\nexport default class PageNumberList extends React.Component {\r\n    render() {\r\n        const {path, totalPage} = this.props;\r\n        let pageNumberList = [];\r\n\r\n        for (let i = 1; i <= totalPage; ++i) {\r\n            pageNumberList.push(<PageNumber key={\"page\" + i} path={path} index={i} selected={i === this.props.selected}/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"page-number-back\">\r\n                {pageNumberList.map(row => row)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PageNumber = ({path, index, selected}) => (\r\n    <a onClick={() => onClickNumber(index)}>\r\n        <span className={selected ? \"page-number selected\" : \"page-number\"}>{index}</span>\r\n    </a>\r\n);\r\n\r\nconst onClickNumber = (page) => {\r\n    if (window.location.hash.indexOf(\"?\") > -1) {\r\n        const hash = window.location.hash;\r\n        const pageStart = hash.indexOf(\"page=\");\r\n        let pageEnd = hash.length;\r\n\r\n        if (pageStart > -1) {\r\n            for (let i = pageStart; i < hash.length; i++) {\r\n                if (hash.charAt(i) === \"&\") {\r\n                    pageEnd = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            window.location.hash = hash.split(\"page=\")[0] + \"page=\" + page + hash.substring(pageEnd);\r\n        } else {\r\n            window.location.hash += \"&page=\" + page;\r\n        }\r\n    } else {\r\n        window.location.hash = \"?page=\" + page;\r\n    }\r\n};","import React from 'react';\r\nimport {ContentsBanner} from \"./ContentsBanner\";\r\nimport PageNumberList from \"./PageNumberList\";\r\nimport Contents from \"./Contents\";\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nexport default class ContentsList extends React.Component {\r\n    state = {list: [], pageNumber: null, totalPage: 1, selectedPage: 1};\r\n    queryStringMap = {};\r\n\r\n    componentDidMount() {\r\n        this.changePageByQueryString();\r\n\r\n        window.addEventListener(\"hashchange\", this.changePageByQueryString, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"hashchange\", this.changePageByQueryString, false);\r\n    }\r\n\r\n    changePageByQueryString = () => {\r\n        const qIndex = window.location.hash.indexOf(\"?\");\r\n        if (qIndex > -1) {\r\n            this.queryStringMap = Contents.parseQuery(window.location.hash.substring(qIndex));\r\n        } else {\r\n            this.queryStringMap = {};\r\n        }\r\n\r\n        this.loadContentsList();\r\n    };\r\n\r\n    loadContentsList = () => {\r\n        let page = Number(this.queryStringMap.page);\r\n        if (!page || page < 1) {\r\n            page = 1;\r\n        }\r\n\r\n        fetch(this.props.listPath)\r\n            .then(response => response.json())\r\n            .then(responseJson => {\r\n                if (responseJson.length > 0) {\r\n                    let originList = this.filterContents(responseJson);\r\n\r\n                    let list = [];\r\n\r\n                    for (let i = PAGE_SIZE * (page - 1); i < PAGE_SIZE * page; ++i) {\r\n                        const contentsBanner = ContentsList.createContentsBanner(originList, i, page);\r\n\r\n                        if (contentsBanner) {\r\n                            list.push(contentsBanner);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    const add = originList.length % PAGE_SIZE > 0 ? 1 : 0;\r\n                    this.setState({list: list, totalPage: (originList.length / PAGE_SIZE) + add, selectedPage: page});\r\n                }\r\n            });\r\n    };\r\n\r\n    filterContents = (allContents) => {\r\n        const result = [];\r\n\r\n        allContents.forEach(row => {\r\n            let isOk = true;\r\n            if (this.queryStringMap.f) {\r\n                isOk = row.sub.startsWith(this.queryStringMap.f);\r\n            }\r\n\r\n            if (isOk) {\r\n                result.push(row);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    static createContentsBanner(list, i, page) {\r\n        const data = list[i];\r\n\r\n        if (data) {\r\n            let query = \"\";\r\n            if (window.location.hash.indexOf(\"?\") > -1) {\r\n                const hash = window.location.hash;\r\n                query = hash.split(\"?\")[1];\r\n            }\r\n\r\n            return <ContentsBanner key={\"contents\" + i}\r\n                                   subject={(list.length - i) + \". \" + data.sub}\r\n                                   description={data.des}\r\n                                   url={data.path}\r\n                                   page={page}\r\n                                   query={query}/>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.list.map(row => row)}\r\n                <PageNumberList path={this.props.basicPath} totalPage={this.state.totalPage} selected={this.state.selectedPage}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport DesktopMenu from './menu/DesktopMenu';\r\nimport Who from './page/Who';\r\nimport ContentsList from './page/ContentsList';\r\nimport Contents from \"./page/Contents\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Router>\r\n                <DesktopMenu menuPath=\"/contents/dev-menu.json\"/>\r\n                <div id=\"main\">\r\n                    <div className=\"container\">\r\n                        <Route exact path=\"/\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\r\n                        <Route path=\"/dev\" render={() => <ContentsList basicPath=\"/dev\" listPath=\"/contents/dev-list.json\"/>}/>\r\n                        <Route path=\"/etc\" render={() => <ContentsList basicPath=\"/etc\" listPath=\"/contents/etc-list.json\"/>}/>\r\n                        <Route path=\"/who\" component={Who}/>\r\n                        <Route path=\"/contents\" component={Contents}/>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}