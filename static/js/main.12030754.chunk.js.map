{"version":3,"sources":["logo.svg","menu/DesktopMenu.js","page/Who.js","page/ContentsBanner.js","page/Dev.js","page/Contents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DesktopMenu","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","id","className","to","React","Component","UrlCard","name","url","target","href","LegacyStack","intro","stackCss","Who","src","colCss","ContentsBanner","subject","description","pathname","state","contentsUrl","Dev","MARKDOWN_CONVERTER","require","Converter","Contents","contents","this","props","location","fetch","then","response","text","responseText","setState","makeHtml","loadContents","textAlign","dangerouslySetInnerHTML","__html","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12030754.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './DesktopMenu.scss';\n\nexport default class DesktopMenu extends React.Component {\n    constructor() {\n        super();\n\n        var prevScrollpos = window.pageYOffset;\n        window.onscroll = function() {\n            var currentScrollPos = window.pageYOffset;\n            if (prevScrollpos > currentScrollPos) {\n                document.getElementById(\"desktop-menu\").style.top = \"0\";\n            } else {\n                document.getElementById(\"desktop-menu\").style.top = \"-50px\";\n            }\n            prevScrollpos = currentScrollPos;\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"desktop-menu\" className=\"desktop-menu\">\n                <Link to=\"/dev\">개발</Link>\n                <Link to=\"/etc\">끄적끄적</Link>\n                <Link to=\"/code\">코드</Link>\n                <Link to=\"/who\">K.Nero</Link>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Who.scss';\n\nconst UrlCard = ({name, url}) => <a className=\"url-card\" target=\"_blank\" href={url}>{name}</a>;\n\nconst LegacyStack = ({name, intro, url, stackCss}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-3\"/>\n        <div className=\"col-sm-6\">\n            <a className={stackCss} target=\"_blank\" href={url}>\n                <strong>{name}</strong>\n                <div>{intro}</div>\n            </a>\n        </div>\n        <div className=\"col-sm-3\"/>\n    </div>\n);\n\nexport default class Who extends React.Component {\n    render() {\n        return (\n            <div className=\"who\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <img src=\"https://knero.github.io/knero-1.png\"/>\n                    </div>\n                    <div className=\"col-sm-6 my-info\">\n                        <div className=\"nickname\">K.Nero</div>\n                        <div>kwon-s-m@daum.net</div>\n                        <div className=\"intro\">\n                            #Java #C# #Backend #FullSt... #React_Native #React #Spring #Android #iOS #app_publishing\n                            #I_love_Network #AWS #SQL_a_little #CTO_Mask_maybe\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <UrlCard name=\"Linked in\" url=\"https://www.linkedin.com/in/seongminKwon\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"github\" url=\"https://github.com/KNero?tab=repositories\" colCss=\"col-sm-3\"/>\n                        <UrlCard name=\"tistory\" url=\"https://jamcode.tistory.com\" colCss=\"col-sm-3\"/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 legacy-stack-text\">\n                        Dev Stack\n                    </div>\n                </div>\n                <LegacyStack name=\"jwt-security\"\n                             intro=\"JWT 와 Role 을 통한 서비스 접근 제어\"\n                             url=\"https://github.com/KNero/jwt-security\"\n                             stackCss=\"legacy-stack-jwt\"/>\n                <LegacyStack name=\"ExOf\"\n                             intro=\"가벼운 프레임워크. 쉬운 사용 방법을 통한 빠른 서비스 호출\"\n                             url=\"https://knero.github.io/ExOf\"\n                             stackCss=\"legacy-stack-exof\"/>\n                <LegacyStack name=\"SQLite-Helper\"\n                             intro=\"SQLite Multi Thread And Single Connection Pool\"\n                             url=\"https://knero.github.io/SQLite-Helper/\"\n                             stackCss=\"legacy-stack-sqlite\"/>\n                <LegacyStack name=\"poi-relative-cell\"\n                             intro=\"Improved use to POI\"\n                             url=\"https://github.com/KNero/poi-relative-cell\"\n                             stackCss=\"legacy-stack-cell\"/>\n                <LegacyStack name=\"FileQueue\"\n                             intro=\"Serverless file queue\"\n                             url=\"https://github.com/KNero/FileQueue\"\n                             stackCss=\"legacy-stack-queue\"/>\n                <LegacyStack name=\"ETree\"\n                             intro=\"javascript tree component\"\n                             url=\"https://github.com/KNero/ETree\"\n                             stackCss=\"legacy-stack-etree\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './ContentsBanner.scss';\n\nexport const ContentsBanner = ({subject, description, url}) => (\n    <div className=\"row\">\n        <div className=\"col-sm-2\"/>\n        <div className=\"col-sm-8 contents-banner\">\n            <Link to={{\n                pathname: \"/contents\",\n                state: {contentsUrl: url}\n            }}>\n                <div className=\"effect\">\n                    <div className=\"banner\">\n                        <div className=\"subject\">{subject}</div>\n                        <div className=\"description\">{description}</div>\n                    </div>\n                </div>\n            </Link>\n        </div>\n        <div className=\"col-sm-2\"/>\n    </div>\n);","import React from 'react';\nimport './Dev.scss';\nimport {ContentsBanner} from \"./ContentsBanner\";\n\nexport default class Dev extends React.Component {\n    render() {\n        return (\n            <div className=\"dev\">\n                <ContentsBanner subject=\"테스트1\" description=\"개발위한 테스트페이지1\" url=\"/dev/200226/1.md\"/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Dev.scss';\nimport {ContentsBanner} from \"./ContentsBanner\";\n\nconst MARKDOWN = require('showdown');\nconst MARKDOWN_CONVERTER = new MARKDOWN.Converter();\n\nexport default class Contents extends React.Component {\n    state = {contents: \"\"};\n\n    loadContents() {\n        const contentsUrl = this.props.location.state ? this.props.location.state.contentsUrl : null;\n        if (contentsUrl) {\n            fetch(contentsUrl)\n                .then((response) => response.text())\n                .then((responseText => this.setState({contents: MARKDOWN_CONVERTER.makeHtml(responseText)})));\n        }\n    }\n\n    render() {\n        this.loadContents();\n\n        return (\n            <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={{__html: this.state.contents}}/>\n        );\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport DesktopMenu from './menu/DesktopMenu';\nimport Who from './page/Who';\nimport Dev from './page/Dev';\nimport Contents from './page/Contents';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <DesktopMenu/>\n                <div className=\"container\">\n                    <Route exact path=\"/\" component={Dev}/>\n                    <Route path=\"/dev\" component={Dev}/>\n                    <Route path=\"/who\" component={Who}/>\n                    <Route path=\"/contents\" component={Contents}/>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}