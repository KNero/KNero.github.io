문제의 설명이 길지만 간단히 설명하면 오름차순으로 정렬이 된 숫자배열에서 중복된 숫자를 모두 제외시키고
배열의 숫자들의 위치를 앞쪽으로 이동시키면된다. 
그리고 숫자의 마지막 인덱스의 다음 인덴스를 반환한다.

```
[1, 1, 2, 3, 3, 4] -> [1, 2, 3, 4, _, _]
return 4
```
`_` 부분에는 어떤 문자가 있어도 상관없다.

처음에는 주어진 배열만 사용해서 해결해보려고 했지만 더 복잡해지는 것 같았다고 배열을 하나 더 사용하니 아주 간단하게 해결됐다.

```java
class Solution {
    public int removeDuplicates(int[] nums) {
        int[] numsCopy = new int[nums.length];
        numsCopy[0] = nums[0];
        int listLastIndex = 0;
        
        for (int i = 0; i < nums.length; ++i) {
            if (numsCopy[listLastIndex] != nums[i]) {
                numsCopy[++listLastIndex] = nums[i];
            }
        }
        
        for (int i = 0; i <= listLastIndex; ++i) {
            nums[i] = numsCopy[i];
        }
        
        return listLastIndex + 1;
    }
}
```
